#+title: NixOS Installation Notes

-- Initial --

#+begin_src sh :tangle

  sudo -s
  
#+end_src

-- Networking --

#+begin_src sh :tangle

  # Partitioning:

  ## (EFI) create and format boot partition
  parted /dev/sda -- mklabel gpt

  parted /dev/sda -- mkpart ESP fat32 1MiB 512MiB
  parted /dev/sda -- set 1 boot on
  parted /dev/sda -- mkpart primary 512MiB 100%

  mkfs.fat -F 32 -n boot /dev/sda1

  ## (BIOS) create and format boot partition
  parted /dev/sda -- mklabel msdos

  parted /dev/sda -- mkpart primary 1MiB 512MiB
  parted /dev/sda -- set 1 boot on
  parted /dev/sda -- mkpart primary 512MiB 100%

  mkfs.ext4 -L boot /dev/sda1

  # create and open luks partition
  cryptsetup luksFormat /dev/sda2
  cryptsetup luksOpen /dev/sda2 crypted

  # format btrfs and subvolumes
  mkfs.btrfs -L root /dev/mapper/crypted
  mount -t btrfs /dev/mapper/crypted /mnt

  btrfs subvolume create /mnt/@root
  btrfs subvolume create /mnt/@home
  btrfs subvolume create /mnt/@nix
  btrfs subvolume create /mnt/@swap

  # if doing tmpfs:
  # btrfs subvolume create /mnt/@persist
  # btrfs subvolume create /mnt/@log

  # take an empty *readonly* snapshot of the root subvolume, which can be rollback to on every boot. (should be able to be deleted in the future if i do)
  btrfs subvolume snapshot -r /mnt/root /mnt/root-blank

  # unmount to mount subvolumes
  umount /mnt

  # mount everything with proper options
  mount -o compress=zstd,noatime,subvol=@root /dev/mapper/crypted /mnt

  mkdir -p /mnt/{home,nix,.swapvol}
  mount -o compress=zstd,noatime,subvol=@home    /dev/mapper/crypted /mnt/home
  mount -o compress=zstd,noatime,subvol=@nix     /dev/mapper/crypted /mnt/nix
  mount -o                       subvol=@swap    /dev/mapper/crypted /mnt/.swapvol

  # if doing tmpfs
  # mkdir -p /mnt{persist,var/log}
  # mount -o compress=zstd,noatime,subvol=@persist /dev/mapper/crypted /mnt/persist
  # mount -o compress=zstd,noatime,subvol=@log     /dev/mapper/crypted /mnt/var/log

  # mount boot partition (only do if using standalone boot part)
  mkdir -p /mnt/boot
  mount /dev/sda1 /mnt/boot 

  # create swapfile
  btrfs filesystem mkswapfile --size 4G /mnt/.swapvol/swapfile  # adjust size appropriately

  # generate config
  nixos-generate-config --root /mnt

  # tweak /mnt/etc/nixos/* as needed
  nix-shell -p neovim

#+end_src

* add to config

- keyboard layout
- subvolume mount options
- swap devices

#+begin_src nix

  { config, lib, pkgs, ... }:

  {

    # boot.loader.grub.enableCryptodisk = true;  # not needed?

    services.xserver.xkb = {
      layout = "us";
      variant = "dvp";
      options = "ctrl:nocaps";
    };
    console = {
      useXkbConfig = true;
      earlySetup = true;  # for grub
    };
    fileSystems."/".options         = [ "subvol=@root"    "compress=zstd" "noatime" ];
    fileSystems."/home".options     = [ "subvol=@home"    "compress=zstd" "noatime" ];
    fileSystems."/nix".options      = [ "subvol=@nix"     "compress=zstd" "noatime" ];
    # fileSystems."/persist".options  = [ "subvol=@persist" "compress=zstd" "noatime" ];
    # fileSystems."/var/log".options  = [ "subvol=@log"     "compress=zstd" "noatime" ];
    # fileSystems."/var/log".neededForBoot = true;  # for correct log order
    swapDevices = [{
      device = "/.swapvol/swapfile";
      size = 4096;  # Size in MiB (4G = 4096MiB), matching your disko config
    }];

    # if doing tmpfs
    # fileSystems."/" = {
    #   device = "none";
    #   fsType = "tmpfs";
    #   options = [ "defaults" "size=2G" "mode=755" ];
    # };

    ### idk:

    boot.initrd.luks.devices = {
      "crypted" = {
        device = "/dev/disk/by-uuid/UUID-OF-LUKS-PARTITION";  # Replace with your UUID
        keyFile = "/crypto_keyfile.bin";  # We'll create this in the initrd
        allowDiscards = true;
      };
    };

    fileSystems = {
      "/" = {
        device = "/dev/mapper/crypted";
        fsType = "btrfs";
        options = [ "subvol=root" "compress=zstd" "noatime" ];
      };

      "/home" = {
        device = "/dev/mapper/crypted";
        fsType = "btrfs";
        options = [ "subvol=home" "compress=zstd" "noatime" ];
      };

      "/nix" = {
        device = "/dev/mapper/crypted";
        fsType = "btrfs";
        options = [ "subvol=nix" "compress=zstd" "noatime" ];
      };

      "/.swapvol" = {
        device = "/dev/mapper/crypted";
        fsType = "btrfs";
        options = [ "subvol=swap" ];
      };

      "/boot" = {
        device = "/dev/disk/by-uuid/UUID-OF-BOOT-PARTITION";  # Replace with your UUID
        fsType = "vfat";
        options = [ "umask=0077" ];
      };
    };

    # Configure swap with the same size as in your disko config
    swapDevices = [{
      device = "/.swapvol/swapfile";
      size = 20;  # Size in MiB, matching your disko config
    }];

    # Copy the key file into the initrd
    boot.initrd.secrets = {
      "/crypto_keyfile.bin" = "/tmp/secret.key";
    };

    # Make sure these are enabled
    boot.loader.systemd-boot.enable = true;
    boot.loader.efi.canTouchEfiVariables = true;
  }

#+end_src

* To troubleshoot:
- cryptsetup luksOpen /dev/sda2 crypted
- mount everything

* I figured it out:

- sda1 needs to be a standalone fs format. so use ext4 for boot partition. reinstall!
